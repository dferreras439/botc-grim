name: Scaffold & Deploy Modern Vite React â†’ GitHub Pages

on:
  workflow_dispatch:

jobs:
  scaffold-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          persist-credentials: true

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Scaffold Vite + React TS (no auto-install)
        run: |
          npx degit vitejs/vite/packages/create-vite/template/react-ts temp-app
          cp -a temp-app/. .
          rm -rf temp-app

      - name: Write custom vite.config.ts
        run: |
          cat > vite.config.ts << 'EOF'
          import { defineConfig } from 'vite'
          import react from '@vitejs/plugin-react'
          import tailwindcss from '@tailwindcss/vite'

          export default defineConfig({
            base: '/${{ github.event.repository.name }}/',
            plugins: [
              react(),
              tailwindcss()
            ],
            test: {
              globals: true,
              environment: 'jsdom'
            }
          })
          EOF

      - name: Install dependencies
        run: |
          npm install -D \
            tailwindcss @tailwindcss/vite \
            eslint prettier eslint-config-prettier \
            eslint-plugin-react eslint-plugin-react-hooks eslint-plugin-jsx-a11y \
            @typescript-eslint/parser @typescript-eslint/eslint-plugin \
            lint-staged husky \
            vitest @testing-library/react @testing-library/jest-dom \
            shadcn

      - name: Create main CSS with Tailwind import
        run: |
          mkdir -p src
          cat > src/index.css << 'EOF'
          @import 'tailwindcss';
          EOF

      - name: Write ESLint & Prettier configs
        run: |
          cat > .eslintrc.json << 'EOF'
          {
            "root": true,
            "parser": "@typescript-eslint/parser",
            "parserOptions": {
              "ecmaVersion": 2020,
              "sourceType": "module",
              "ecmaFeatures": { "jsx": true }
            },
            "plugins": ["react","react-hooks","@typescript-eslint"],
            "extends": [
              "eslint:recommended",
              "plugin:react/recommended",
              "plugin:@typescript-eslint/recommended",
              "prettier"
            ],
            "settings": { "react": { "version": "detect" } },
            "rules": {}
          }
          EOF

          cat > .prettierrc << 'EOF'
          {
            "semi": true,
            "singleQuote": true,
            "printWidth": 80
          }
          EOF

      - name: Configure test & lint scripts
        run: |
          npm pkg set scripts.test="vitest"
          npm pkg set lint-staged='{"src/**/*.{js,ts,jsx,tsx}":["eslint --fix","prettier --write"]}'

      - name: Modern Husky setup
        run: |
          npm pkg set scripts.prepare="husky"
          npm run prepare
          printf "npx lint-staged\n" > .husky/pre-commit
          chmod +x .husky/pre-commit

      - name: Initialize shadcn/ui
        run: npx shadcn@latest init --yes

      - name: Add TS alias for components
        run: |
          node << 'EOF'
          const fs = require('fs')
          const ts = JSON.parse(fs.readFileSync('tsconfig.json'))
          ts.compilerOptions = ts.compilerOptions || {}
          ts.compilerOptions.baseUrl = '.'
          ts.compilerOptions.paths = ts.compilerOptions.paths || {}
          ts.compilerOptions.paths['@/components/*'] = ['components/*']
          ts.include = ts.include || []
          if (!ts.include.includes('components')) ts.include.push('components')
          fs.writeFileSync('tsconfig.json', JSON.stringify(ts, null, 2))
          EOF

      - name: Commit scaffold to main
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Initialize modern Vite+React+TS+Tailwind v4+ESLint+Vitest+Husky+shadcn" || echo "No changes to commit"
          git push origin main

      - name: Build production bundle
        run: |
          npm install
          npm run build

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./dist

      - name: Enable GitHub Pages
        if: always()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl -X PUT \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.switcheroo-preview+json" \
            https://api.github.com/repos/${{ github.repository_owner }}/${{ github.event.repository.name }}/pages \
            -d '{"source":{"branch":"gh-pages","path":"/"}}'
