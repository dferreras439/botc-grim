name: Scaffold & Deploy Modern Vite React → GitHub Pages

on:
  workflow_dispatch:

permissions:
  contents: write
  pages: write

jobs:
  scaffold-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1) Checkout (with push perms)
      - uses: actions/checkout@v3
        with:
          persist-credentials: true

      # 2) Node 20+
      - uses: actions/setup-node@v3
        with:
          node-version: '20'

      # 3) Fetch Vite React TS via degit (just files, no install) 
      - name: Scaffold Vite + React TS
        run: |
          npx degit vitejs/vite/packages/create-vite/template/react-ts temp-app
          cp -a temp-app/. .
          rm -rf temp-app

      # 4) Install your app’s dependencies
      - name: Install dependencies
        run: npm install

      # 5) Add dev-tooling: Tailwind v4 plugin, ESLint, Prettier, Vitest, Husky, shadcn
      - name: Install dev dependencies
        run: |
          npm install -D \
            tailwindcss @tailwindcss/vite postcss autoprefixer \
            eslint prettier eslint-config-prettier \
            eslint-plugin-react eslint-plugin-react-hooks eslint-plugin-jsx-a11y \
            @typescript-eslint/parser @typescript-eslint/eslint-plugin \
            lint-staged husky \
            vitest @testing-library/react @testing-library/jest-dom \
            shadcn

      # 6) Write vite.config.ts (base path, Tailwind plugin, Vitest) 
      - name: Write vite.config.ts
        run: |
          cat > vite.config.ts << 'EOF'
          import { defineConfig } from 'vite';
          import react from '@vitejs/plugin-react';
          import tailwindcss from '@tailwindcss/vite';

          export default defineConfig({
            base: '/${{ github.event.repository.name }}/',
            plugins: [react(), tailwindcss()],
            test: {
              globals: true,
              environment: 'jsdom'
            }
          });
          EOF

      # 7) Manually create tailwind.config.js & postcss.config.js (no CLI) 
      - name: Write Tailwind & PostCSS configs
        run: |
          cat > tailwind.config.js << 'EOF'
          /** @type {import('tailwindcss').Config'} */
          export default {
            content: [
              'index.html',
              'src/**/*.{js,ts,jsx,tsx}',
              'components/**/*.{js,ts,jsx,tsx}'
            ],
            theme: { extend: {} },
            plugins: []
          };
          EOF

          cat > postcss.config.js << 'EOF'
          export default {
            plugins: {
              tailwindcss: {},
              autoprefixer: {},
            },
          };
          EOF

      # 8) Overwrite your main CSS to import Tailwind
      - name: Create src/index.css
        run: |
          mkdir -p src
          cat > src/index.css << 'EOF'
          @tailwind base;
          @tailwind components;
          @tailwind utilities;
          EOF

      # 9) Drop in ESLint & Prettier configs
      - name: Write ESLint & Prettier config
        run: |
          cat > .eslintrc.json << 'EOF'
          {
            "root": true,
            "parser": "@typescript-eslint/parser",
            "parserOptions": {
              "ecmaVersion": 2020,
              "sourceType": "module",
              "ecmaFeatures": { "jsx": true }
            },
            "plugins": ["react","react-hooks","@typescript-eslint"],
            "extends": [
              "eslint:recommended",
              "plugin:react/recommended",
              "plugin:@typescript-eslint/recommended",
              "prettier"
            ],
            "settings": { "react": { "version": "detect" } },
            "rules": {}
          }
          EOF

          cat > .prettierrc << 'EOF'
          {
            "semi": true,
            "singleQuote": true,
            "printWidth": 80
          }
          EOF

      # 10) Configure test & lint scripts
      - name: Configure scripts
        run: |
          npm pkg set scripts.test="vitest"
          npm pkg set lint-staged='{"src/**/*.{js,ts,jsx,tsx}":["eslint --fix","prettier --write"]}'
          npm pkg set scripts.prepare="husky"

      # 11) Modern Husky setup
      - name: Setup Husky pre-commit hook
        run: |
          npm run prepare
          printf "npx lint-staged\n" > .husky/pre-commit
          chmod +x .husky/pre-commit

      # 12) Initialize shadcn components (requires the TS alias below)
      - name: Init shadcn/ui
        run: npx shadcn@latest init --yes

      # 13) Add TS path alias for components
      - name: Add TS alias for components
        run: |
          node << 'EOF'
          const fs = require('fs');
          const ts = JSON.parse(fs.readFileSync('tsconfig.json'));
          ts.compilerOptions = ts.compilerOptions || {};
          ts.compilerOptions.baseUrl = '.';
          ts.compilerOptions.paths = ts.compilerOptions.paths || {};
          ts.compilerOptions.paths['@/components/*'] = ['components/*'];
          ts.include = ts.include || [];
          if (!ts.include.includes('components')) ts.include.push('components');
          fs.writeFileSync('tsconfig.json', JSON.stringify(ts, null, 2));
          EOF

      # 14) Commit all the scaffold/config back to main
      - name: Commit scaffold to main
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Initialize modern Vite+React+TS+Tailwind+ESLint+Vitest+Husky+shadcn" || echo "Nothing to commit"
          git push origin main

      # 15) Build & deploy
      - name: Build prod bundle
        run: npm run build

      - name: Deploy to gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./dist

      # 16) Enable GitHub Pages
      - name: Enable GitHub Pages
        if: always()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl -X PUT \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.switcheroo-preview+json" \
            https://api.github.com/repos/${{ github.repository_owner }}/${{ github.event.repository.name }}/pages \
            -d '{"source":{"branch":"gh-pages","path":"/"}}'
